<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd"
         xml:id="java_server">
<info>
    <title>Server Library</title>
</info>
<para>
    To run the CometD server implementation, you need to deploy a Java web application to a servlet container.
</para>
<para>
    You configure the web application with the CometD <emphasis>servlet</emphasis> that interprets
    the Bayeux protocol (see <xref linkend="java_server_configuration" /> for the CometD servlet configuration
    details).
</para>
<para>
    While CometD interprets Bayeux messages, applications normally implement their own business
    logic, so they need to be able to interact with Bayeux messages â€“ inspect them, modify them, publish more
    messages on different channels, and interact with external systems such as web services or persistent storage.
</para>
<para>
    In order to implement their own business logic, applications need to write one or more user-defined services, see
    <xref linkend="java_server_services" />, that can act upon receiving messages on Bayeux channels.
</para>
<para>
    The following sections present detailed information about the Java Server APIs and their implementation.
</para>

<xi:include href="java_server_configuration.xml" /> 
<xi:include href="java_server_services.xml" />
<xi:include href="java_server_authorization.xml" />
<xi:include href="java_server_authorizers.xml" />
<xi:include href="java_server_transports.xml" />
<xi:include href="java_server_context.xml" />
<xi:include href="java_server_lazy_messages.xml" />
<xi:include href="java_server_multiple_sessions.xml" />
<xi:include href="java_server_jmx.xml" />

</section>
